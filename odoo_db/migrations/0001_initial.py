# Generated by Django 2.1.5 on 2019-05-01 11:27

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BaseImportImport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('res_model', models.CharField(blank=True, max_length=1000, null=True)),
                ('file', models.BinaryField(blank=True, null=True)),
                ('file_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('file_type', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_import',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('res_model', models.CharField(blank=True, max_length=5000, null=True)),
                ('column_name', models.CharField(blank=True, max_length=5000, null=True)),
                ('field_name', models.CharField(blank=True, max_length=5000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsChar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_char',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsCharNoreadonly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_char_noreadonly',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsCharReadonly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_char_readonly',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsCharRequired',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=1000)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_char_required',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsCharStates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_char_states',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsCharStillreadonly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_char_stillreadonly',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsComplex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('f', models.FloatField(blank=True, null=True)),
                ('m', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('c', models.CharField(blank=True, max_length=1000, null=True)),
                ('d', models.DateField(blank=True, null=True)),
                ('dt', models.DateTimeField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_complex',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsFloat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField(blank=True, null=True)),
                ('value2', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_float',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsM2O',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_m2o',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsM2ORelated',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_m2o_related',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsM2ORequired',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_m2o_required',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsM2ORequiredRelated',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_m2o_required_related',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsO2M',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_o2m',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsO2MChild',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_o2m_child',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseImportTestsModelsPreview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
                ('somevalue', models.IntegerField()),
                ('othervalue', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_import_tests_models_preview',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseLanguageExport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
                ('lang', models.CharField(max_length=1000)),
                ('format', models.CharField(max_length=1000)),
                ('data', models.BinaryField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_language_export',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseLanguageImport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('code', models.CharField(max_length=5)),
                ('data', models.BinaryField()),
                ('filename', models.CharField(max_length=1000)),
                ('overwrite', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_language_import',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseLanguageInstall',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lang', models.CharField(max_length=1000)),
                ('overwrite', models.BooleanField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_language_install',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseModuleUninstall',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show_all', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_module_uninstall',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseModuleUpdate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.IntegerField(blank=True, null=True)),
                ('added', models.IntegerField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_module_update',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseModuleUpgrade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module_info', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_module_upgrade',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BasePartnerMergeAutomaticWizard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_by_email', models.BooleanField(blank=True, null=True)),
                ('group_by_name', models.BooleanField(blank=True, null=True)),
                ('group_by_is_company', models.BooleanField(blank=True, null=True)),
                ('group_by_vat', models.BooleanField(blank=True, null=True)),
                ('group_by_parent_id', models.BooleanField(blank=True, null=True)),
                ('state', models.CharField(max_length=1000)),
                ('number_group', models.IntegerField(blank=True, null=True)),
                ('exclude_contact', models.BooleanField(blank=True, null=True)),
                ('exclude_journal_item', models.BooleanField(blank=True, null=True)),
                ('maximum_group', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_partner_merge_automatic_wizard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BasePartnerMergeAutomaticWizardResPartnerRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'base_partner_merge_automatic_wizard_res_partner_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BasePartnerMergeLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_id', models.IntegerField(blank=True, null=True)),
                ('aggr_ids', models.CharField(max_length=1000)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_partner_merge_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseUpdateTranslations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lang', models.CharField(max_length=1000)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'base_update_translations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BusBus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel', models.CharField(blank=True, max_length=1000, null=True)),
                ('message', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bus_bus',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BusPresence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_poll', models.DateTimeField(blank=True, null=True)),
                ('last_presence', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'db_table': 'bus_presence',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CalendarAlarm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('type', models.CharField(max_length=1000)),
                ('duration', models.IntegerField()),
                ('interval', models.CharField(max_length=1000)),
                ('duration_minutes', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'calendar_alarm',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CalendarAlarmCalendarEventRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'calendar_alarm_calendar_event_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CalendarAttendee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(blank=True, max_length=1000, null=True)),
                ('common_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('email', models.CharField(blank=True, max_length=1000, null=True)),
                ('availability', models.CharField(blank=True, max_length=1000, null=True)),
                ('access_token', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'calendar_attendee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CalendarContacts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'calendar_contacts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CalendarEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('state', models.CharField(blank=True, max_length=1000, null=True)),
                ('display_start', models.CharField(blank=True, max_length=1000, null=True)),
                ('start', models.DateTimeField()),
                ('stop', models.DateTimeField()),
                ('allday', models.BooleanField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('start_datetime', models.DateTimeField(blank=True, null=True)),
                ('stop_date', models.DateField(blank=True, null=True)),
                ('stop_datetime', models.DateTimeField(blank=True, null=True)),
                ('duration', models.FloatField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('privacy', models.CharField(blank=True, max_length=1000, null=True)),
                ('location', models.CharField(blank=True, max_length=1000, null=True)),
                ('show_as', models.CharField(blank=True, max_length=1000, null=True)),
                ('res_id', models.IntegerField(blank=True, null=True)),
                ('res_model_0', models.CharField(blank=True, db_column='res_model', max_length=1000, null=True)),
                ('rrule', models.CharField(blank=True, max_length=1000, null=True)),
                ('rrule_type', models.CharField(blank=True, max_length=1000, null=True)),
                ('recurrency', models.BooleanField(blank=True, null=True)),
                ('recurrent_id', models.IntegerField(blank=True, null=True)),
                ('recurrent_id_date', models.DateTimeField(blank=True, null=True)),
                ('end_type', models.CharField(blank=True, max_length=1000, null=True)),
                ('interval', models.IntegerField(blank=True, null=True)),
                ('count', models.IntegerField(blank=True, null=True)),
                ('mo', models.BooleanField(blank=True, null=True)),
                ('tu', models.BooleanField(blank=True, null=True)),
                ('we', models.BooleanField(blank=True, null=True)),
                ('th', models.BooleanField(blank=True, null=True)),
                ('fr', models.BooleanField(blank=True, null=True)),
                ('sa', models.BooleanField(blank=True, null=True)),
                ('su', models.BooleanField(blank=True, null=True)),
                ('month_by', models.CharField(blank=True, max_length=1000, null=True)),
                ('day', models.IntegerField(blank=True, null=True)),
                ('week_list', models.CharField(blank=True, max_length=1000, null=True)),
                ('byday', models.CharField(blank=True, max_length=1000, null=True)),
                ('final_date', models.DateField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'calendar_event',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CalendarEventResPartnerRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'calendar_event_res_partner_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CalendarEventType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000, unique=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'calendar_event_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ChangePasswordUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_login', models.CharField(blank=True, max_length=1000, null=True)),
                ('new_passwd', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'change_password_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ChangePasswordWizard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'change_password_wizard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmLead',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('date_action_last', models.DateTimeField(blank=True, null=True)),
                ('email_from', models.CharField(blank=True, max_length=1000, null=True)),
                ('website', models.CharField(blank=True, max_length=1000, null=True)),
                ('email_cc', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('contact_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('partner_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('type', models.CharField(max_length=1000)),
                ('priority', models.CharField(blank=True, max_length=1000, null=True)),
                ('date_closed', models.DateTimeField(blank=True, null=True)),
                ('referred', models.CharField(blank=True, max_length=1000, null=True)),
                ('date_open', models.DateTimeField(blank=True, null=True)),
                ('day_open', models.FloatField(blank=True, null=True)),
                ('day_close', models.FloatField(blank=True, null=True)),
                ('date_last_stage_update', models.DateTimeField(blank=True, null=True)),
                ('date_conversion', models.DateTimeField(blank=True, null=True)),
                ('message_bounce', models.IntegerField(blank=True, null=True)),
                ('probability', models.FloatField(blank=True, null=True)),
                ('planned_revenue', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('expected_revenue', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('date_deadline', models.DateField(blank=True, null=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('street', models.CharField(blank=True, max_length=1000, null=True)),
                ('street2', models.CharField(blank=True, max_length=1000, null=True)),
                ('zip', models.CharField(blank=True, max_length=1000, null=True)),
                ('city', models.CharField(blank=True, max_length=1000, null=True)),
                ('phone', models.CharField(blank=True, max_length=1000, null=True)),
                ('mobile', models.CharField(blank=True, max_length=1000, null=True)),
                ('function', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'crm_lead',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmLead2OpportunityPartner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('action', models.CharField(max_length=1000)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'crm_lead2opportunity_partner',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmLead2OpportunityPartnerMass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deduplicate', models.BooleanField(blank=True, null=True)),
                ('action', models.CharField(max_length=1000)),
                ('force_assignation', models.BooleanField(blank=True, null=True)),
                ('name', models.CharField(max_length=1000)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'crm_lead2opportunity_partner_mass',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmLead2OpportunityPartnerMassResUsersRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'crm_lead2opportunity_partner_mass_res_users_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmLeadCrmLead2OpportunityPartnerMassRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'crm_lead_crm_lead2opportunity_partner_mass_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmLeadCrmLead2OpportunityPartnerRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'crm_lead_crm_lead2opportunity_partner_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmLeadLost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'crm_lead_lost',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmLeadTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000, unique=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'crm_lead_tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmLeadTagRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'crm_lead_tag_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmLostReason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'crm_lost_reason',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmMergeOpportunity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'crm_merge_opportunity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmPartnerBinding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=1000)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'crm_partner_binding',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmStage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('probability', models.FloatField()),
                ('on_change', models.BooleanField(blank=True, null=True)),
                ('requirements', models.TextField(blank=True, null=True)),
                ('legend_priority', models.TextField(blank=True, null=True)),
                ('fold', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'crm_stage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('reply_to', models.CharField(blank=True, max_length=1000, null=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('team_type', models.CharField(max_length=1000)),
                ('dashboard_graph_model', models.CharField(blank=True, max_length=1000, null=True)),
                ('dashboard_graph_group', models.CharField(blank=True, max_length=1000, null=True)),
                ('dashboard_graph_period', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('use_leads', models.BooleanField(blank=True, null=True)),
                ('use_opportunities', models.BooleanField(blank=True, null=True)),
                ('dashboard_graph_group_pipeline', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'db_table': 'crm_team',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DigestDigest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('periodicity', models.CharField(max_length=1000)),
                ('next_run_date', models.DateField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=1000, null=True)),
                ('kpi_res_users_connected', models.BooleanField(blank=True, null=True)),
                ('kpi_mail_message_total', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('kpi_project_task_opened', models.BooleanField(blank=True, null=True)),
                ('kpi_crm_lead_created', models.BooleanField(blank=True, null=True)),
                ('kpi_crm_opportunities_won', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'digest_digest',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DigestDigestResUsersRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'digest_digest_res_users_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DigestTip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('tip_description', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'digest_tip',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DigestTipResUsersRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'digest_tip_res_users_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmailTemplateAttachmentRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'email_template_attachment_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmailTemplatePreview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('res_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
                ('model_0', models.CharField(blank=True, db_column='model', max_length=1000, null=True)),
                ('lang', models.CharField(blank=True, max_length=1000, null=True)),
                ('user_signature', models.BooleanField(blank=True, null=True)),
                ('subject', models.CharField(blank=True, max_length=1000, null=True)),
                ('email_from', models.CharField(blank=True, max_length=1000, null=True)),
                ('use_default_to', models.BooleanField(blank=True, null=True)),
                ('email_to', models.CharField(blank=True, max_length=1000, null=True)),
                ('partner_to', models.CharField(blank=True, max_length=1000, null=True)),
                ('email_cc', models.CharField(blank=True, max_length=1000, null=True)),
                ('reply_to', models.CharField(blank=True, max_length=1000, null=True)),
                ('body_html', models.TextField(blank=True, null=True)),
                ('report_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('auto_delete', models.BooleanField(blank=True, null=True)),
                ('null_value', models.CharField(blank=True, max_length=1000, null=True)),
                ('copyvalue', models.CharField(blank=True, max_length=1000, null=True)),
                ('scheduled_date', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'email_template_preview',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmailTemplatePreviewResPartnerRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'email_template_preview_res_partner_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmployeeCategoryRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'employee_category_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FetchmailServer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=1000, null=True)),
                ('server', models.CharField(blank=True, max_length=1000, null=True)),
                ('port', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(max_length=1000)),
                ('is_ssl', models.BooleanField(blank=True, null=True)),
                ('attach', models.BooleanField(blank=True, null=True)),
                ('original', models.BooleanField(blank=True, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('user', models.CharField(blank=True, max_length=1000, null=True)),
                ('password', models.CharField(blank=True, max_length=1000, null=True)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('configuration', models.TextField(blank=True, null=True)),
                ('script', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fetchmail_server',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HrDepartment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('complete_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hr_department',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HrDepartmentMailChannelRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'hr_department_mail_channel_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HrEmployee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=1000, null=True)),
                ('marital', models.CharField(blank=True, max_length=1000, null=True)),
                ('spouse_complete_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('spouse_birthdate', models.DateField(blank=True, null=True)),
                ('children', models.IntegerField(blank=True, null=True)),
                ('place_of_birth', models.CharField(blank=True, max_length=1000, null=True)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('ssnid', models.CharField(blank=True, max_length=1000, null=True)),
                ('sinid', models.CharField(blank=True, max_length=1000, null=True)),
                ('identification_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('passport_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('permit_no', models.CharField(blank=True, max_length=1000, null=True)),
                ('visa_no', models.CharField(blank=True, max_length=1000, null=True)),
                ('visa_expire', models.DateField(blank=True, null=True)),
                ('additional_note', models.TextField(blank=True, null=True)),
                ('certificate', models.CharField(blank=True, max_length=1000, null=True)),
                ('study_field', models.CharField(blank=True, max_length=1000, null=True)),
                ('study_school', models.CharField(blank=True, max_length=1000, null=True)),
                ('emergency_contact', models.CharField(blank=True, max_length=1000, null=True)),
                ('emergency_phone', models.CharField(blank=True, max_length=1000, null=True)),
                ('km_home_work', models.IntegerField(blank=True, null=True)),
                ('google_drive_link', models.CharField(blank=True, max_length=1000, null=True)),
                ('job_title', models.CharField(blank=True, max_length=1000, null=True)),
                ('work_phone', models.CharField(blank=True, max_length=1000, null=True)),
                ('mobile_phone', models.CharField(blank=True, max_length=1000, null=True)),
                ('work_email', models.CharField(blank=True, max_length=1000, null=True)),
                ('work_location', models.CharField(blank=True, max_length=1000, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hr_employee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HrEmployeeCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000, unique=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hr_employee_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HrJob',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('expected_employees', models.IntegerField(blank=True, null=True)),
                ('no_of_employee', models.IntegerField(blank=True, null=True)),
                ('no_of_recruitment', models.IntegerField(blank=True, null=True)),
                ('no_of_hired_employee', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('requirements', models.TextField(blank=True, null=True)),
                ('state', models.CharField(max_length=1000)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hr_job',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IapAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('account_token', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'iap_account',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrActClient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('type', models.CharField(max_length=1000)),
                ('help', models.TextField(blank=True, null=True)),
                ('binding_type', models.CharField(max_length=1000)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('tag', models.CharField(max_length=1000)),
                ('target', models.CharField(blank=True, max_length=1000, null=True)),
                ('res_model', models.CharField(blank=True, max_length=1000, null=True)),
                ('context', models.CharField(max_length=1000)),
                ('params_store', models.BinaryField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_act_client',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrActions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('type', models.CharField(max_length=1000)),
                ('help', models.TextField(blank=True, null=True)),
                ('binding_type', models.CharField(max_length=1000)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_actions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrActionsTodo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_id', models.IntegerField()),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('state', models.CharField(max_length=1000)),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_actions_todo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrActReportXml',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('type', models.CharField(max_length=1000)),
                ('help', models.TextField(blank=True, null=True)),
                ('binding_type', models.CharField(max_length=1000)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('model', models.CharField(max_length=1000)),
                ('report_type', models.CharField(max_length=1000)),
                ('report_name', models.CharField(max_length=1000)),
                ('report_file', models.CharField(blank=True, max_length=1000, null=True)),
                ('multi', models.BooleanField(blank=True, null=True)),
                ('print_report_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('attachment_use', models.BooleanField(blank=True, null=True)),
                ('attachment', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'db_table': 'ir_act_report_xml',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrActServer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('type', models.CharField(max_length=1000)),
                ('help', models.TextField(blank=True, null=True)),
                ('binding_type', models.CharField(max_length=1000)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('usage', models.CharField(max_length=1000)),
                ('state', models.CharField(max_length=1000)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('model_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('code', models.TextField(blank=True, null=True)),
                ('activity_summary', models.CharField(blank=True, max_length=1000, null=True)),
                ('activity_note', models.TextField(blank=True, null=True)),
                ('activity_date_deadline_range', models.IntegerField(blank=True, null=True)),
                ('activity_date_deadline_range_type', models.CharField(blank=True, max_length=1000, null=True)),
                ('activity_user_type', models.CharField(max_length=1000)),
                ('activity_user_field_name', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'db_table': 'ir_act_server',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrActServerMailChannelRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'ir_act_server_mail_channel_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrActServerResPartnerRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'ir_act_server_res_partner_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrActUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('type', models.CharField(max_length=1000)),
                ('help', models.TextField(blank=True, null=True)),
                ('binding_type', models.CharField(max_length=1000)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('url', models.TextField()),
                ('target', models.CharField(max_length=1000)),
            ],
            options={
                'db_table': 'ir_act_url',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrActWindow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('type', models.CharField(max_length=1000)),
                ('help', models.TextField(blank=True, null=True)),
                ('binding_type', models.CharField(max_length=1000)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('domain', models.CharField(blank=True, max_length=1000, null=True)),
                ('context', models.CharField(max_length=1000)),
                ('res_id', models.IntegerField(blank=True, null=True)),
                ('res_model', models.CharField(max_length=1000)),
                ('src_model', models.CharField(blank=True, max_length=1000, null=True)),
                ('target', models.CharField(blank=True, max_length=1000, null=True)),
                ('view_mode', models.CharField(max_length=1000)),
                ('view_type', models.CharField(max_length=1000)),
                ('usage', models.CharField(blank=True, max_length=1000, null=True)),
                ('limit', models.IntegerField(blank=True, null=True)),
                ('filter', models.BooleanField(blank=True, null=True)),
                ('auto_search', models.BooleanField(blank=True, null=True)),
                ('multi', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_act_window',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrActWindowGroupRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'ir_act_window_group_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrActWindowView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('view_mode', models.CharField(max_length=1000)),
                ('multi', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_act_window_view',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('datas_fname', models.CharField(blank=True, max_length=1000, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('res_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('res_model', models.CharField(blank=True, max_length=1000, null=True)),
                ('res_model_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('res_field', models.CharField(blank=True, max_length=1000, null=True)),
                ('res_id', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(max_length=1000)),
                ('url', models.CharField(blank=True, max_length=1024, null=True)),
                ('public', models.BooleanField(blank=True, null=True)),
                ('access_token', models.CharField(blank=True, max_length=1000, null=True)),
                ('db_datas', models.BinaryField(blank=True, null=True)),
                ('store_fname', models.CharField(blank=True, max_length=1000, null=True)),
                ('file_size', models.IntegerField(blank=True, null=True)),
                ('checksum', models.CharField(blank=True, max_length=40, null=True)),
                ('mimetype', models.CharField(blank=True, max_length=1000, null=True)),
                ('index_content', models.TextField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_attachment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrConfigParameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=1000, unique=True)),
                ('value', models.TextField()),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_config_parameter',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrCron',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cron_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('interval_number', models.IntegerField(blank=True, null=True)),
                ('interval_type', models.CharField(blank=True, max_length=1000, null=True)),
                ('numbercall', models.IntegerField(blank=True, null=True)),
                ('doall', models.BooleanField(blank=True, null=True)),
                ('nextcall', models.DateTimeField()),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_cron',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrDefault',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition', models.CharField(blank=True, max_length=1000, null=True)),
                ('json_value', models.CharField(max_length=1000)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_default',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrDemo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_demo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrDemoFailure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('error', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_demo_failure',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrDemoFailureWizard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_demo_failure_wizard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrExports',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
                ('resource', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_exports',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrExportsLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_exports_line',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrFilters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('domain', models.TextField()),
                ('context', models.TextField()),
                ('sort', models.TextField()),
                ('model_id', models.CharField(max_length=1000)),
                ('is_default', models.BooleanField(blank=True, null=True)),
                ('action_id', models.IntegerField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_filters',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrLogging',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('create_uid', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=1000)),
                ('type', models.CharField(max_length=1000)),
                ('dbname', models.CharField(blank=True, max_length=1000, null=True)),
                ('level', models.CharField(blank=True, max_length=1000, null=True)),
                ('message', models.TextField()),
                ('path', models.CharField(max_length=1000)),
                ('func', models.CharField(max_length=1000)),
                ('line', models.CharField(max_length=1000)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_logging',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrMailServer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('smtp_host', models.CharField(max_length=1000)),
                ('smtp_port', models.IntegerField()),
                ('smtp_user', models.CharField(blank=True, max_length=1000, null=True)),
                ('smtp_pass', models.CharField(blank=True, max_length=1000, null=True)),
                ('smtp_encryption', models.CharField(max_length=1000)),
                ('smtp_debug', models.BooleanField(blank=True, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_mail_server',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('model', models.CharField(max_length=1000, unique=True)),
                ('info', models.TextField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=1000, null=True)),
                ('transient', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('is_mail_thread', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_model',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrModelAccess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('perm_read', models.BooleanField(blank=True, null=True)),
                ('perm_write', models.BooleanField(blank=True, null=True)),
                ('perm_create', models.BooleanField(blank=True, null=True)),
                ('perm_unlink', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_model_access',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrModelConstraint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('definition', models.CharField(blank=True, max_length=1000, null=True)),
                ('type', models.CharField(max_length=1)),
                ('date_update', models.DateTimeField(blank=True, null=True)),
                ('date_init', models.DateTimeField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_model_constraint',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrModelData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('noupdate', models.BooleanField(blank=True, null=True)),
                ('name', models.CharField(max_length=1000)),
                ('date_init', models.DateTimeField(blank=True, null=True)),
                ('date_update', models.DateTimeField(blank=True, null=True)),
                ('module', models.CharField(max_length=1000)),
                ('model', models.CharField(max_length=1000)),
                ('res_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_model_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrModelFields',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('complete_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('model', models.CharField(max_length=1000)),
                ('relation', models.CharField(blank=True, max_length=1000, null=True)),
                ('relation_field', models.CharField(blank=True, max_length=1000, null=True)),
                ('field_description', models.CharField(max_length=1000)),
                ('help', models.TextField(blank=True, null=True)),
                ('ttype', models.CharField(max_length=1000)),
                ('selection', models.CharField(blank=True, max_length=1000, null=True)),
                ('copied', models.BooleanField(blank=True, null=True)),
                ('related', models.CharField(blank=True, max_length=1000, null=True)),
                ('required', models.BooleanField(blank=True, null=True)),
                ('readonly', models.BooleanField(blank=True, null=True)),
                ('index', models.BooleanField(blank=True, null=True)),
                ('translate', models.BooleanField(blank=True, null=True)),
                ('size', models.IntegerField(blank=True, null=True)),
                ('state', models.CharField(max_length=1000)),
                ('on_delete', models.CharField(blank=True, max_length=1000, null=True)),
                ('domain', models.CharField(blank=True, max_length=1000, null=True)),
                ('selectable', models.BooleanField(blank=True, null=True)),
                ('relation_table', models.CharField(blank=True, max_length=1000, null=True)),
                ('column1', models.CharField(blank=True, max_length=1000, null=True)),
                ('column2', models.CharField(blank=True, max_length=1000, null=True)),
                ('compute', models.TextField(blank=True, null=True)),
                ('depends', models.CharField(blank=True, max_length=1000, null=True)),
                ('store', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('track_visibility', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'db_table': 'ir_model_fields',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrModelFieldsGroupRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'ir_model_fields_group_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrModelRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('date_update', models.DateTimeField(blank=True, null=True)),
                ('date_init', models.DateTimeField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_model_relation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrModuleCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=1000)),
                ('description', models.TextField(blank=True, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('visible', models.BooleanField(blank=True, null=True)),
                ('exclusive', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_module_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrModuleModule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('website', models.CharField(blank=True, max_length=1000, null=True)),
                ('summary', models.CharField(blank=True, max_length=1000, null=True)),
                ('name', models.CharField(max_length=1000, unique=True)),
                ('author', models.CharField(blank=True, max_length=1000, null=True)),
                ('icon', models.CharField(blank=True, max_length=1000, null=True)),
                ('state', models.CharField(blank=True, max_length=16, null=True)),
                ('latest_version', models.CharField(blank=True, max_length=1000, null=True)),
                ('shortdesc', models.CharField(blank=True, max_length=1000, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('application', models.BooleanField(blank=True, null=True)),
                ('demo', models.BooleanField(blank=True, null=True)),
                ('web', models.BooleanField(blank=True, null=True)),
                ('license', models.CharField(blank=True, max_length=32, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('auto_install', models.BooleanField(blank=True, null=True)),
                ('to_buy', models.BooleanField(blank=True, null=True)),
                ('maintainer', models.CharField(blank=True, max_length=1000, null=True)),
                ('contributors', models.TextField(blank=True, null=True)),
                ('published_version', models.CharField(blank=True, max_length=1000, null=True)),
                ('url', models.CharField(blank=True, max_length=1000, null=True)),
                ('menus_by_module', models.TextField(blank=True, null=True)),
                ('reports_by_module', models.TextField(blank=True, null=True)),
                ('views_by_module', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_module_module',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrModuleModuleDependency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'db_table': 'ir_module_module_dependency',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrModuleModuleExclusion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_module_module_exclusion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrProperty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
                ('res_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('value_float', models.FloatField(blank=True, null=True)),
                ('value_integer', models.IntegerField(blank=True, null=True)),
                ('value_text', models.TextField(blank=True, null=True)),
                ('value_binary', models.BinaryField(blank=True, null=True)),
                ('value_reference', models.CharField(blank=True, max_length=1000, null=True)),
                ('value_datetime', models.DateTimeField(blank=True, null=True)),
                ('type', models.CharField(max_length=1000)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_property',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('domain_force', models.TextField(blank=True, null=True)),
                ('perm_read', models.BooleanField(blank=True, null=True)),
                ('perm_write', models.BooleanField(blank=True, null=True)),
                ('perm_create', models.BooleanField(blank=True, null=True)),
                ('perm_unlink', models.BooleanField(blank=True, null=True)),
                ('global_field', models.BooleanField(blank=True, db_column='global', null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_rule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrSequence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('code', models.CharField(blank=True, max_length=1000, null=True)),
                ('implementation', models.CharField(max_length=1000)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('prefix', models.CharField(blank=True, max_length=1000, null=True)),
                ('suffix', models.CharField(blank=True, max_length=1000, null=True)),
                ('number_next', models.IntegerField()),
                ('number_increment', models.IntegerField()),
                ('padding', models.IntegerField()),
                ('use_date_range', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_sequence',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrSequenceDateRange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_from', models.DateField()),
                ('date_to', models.DateField()),
                ('number_next', models.IntegerField()),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_sequence_date_range',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrServerObjectLines',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField()),
                ('type', models.CharField(max_length=1000)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_server_object_lines',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('res_id', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=1000, null=True)),
                ('src', models.TextField(blank=True, null=True)),
                ('value', models.TextField(blank=True, null=True)),
                ('module', models.CharField(blank=True, max_length=1000, null=True)),
                ('state', models.CharField(blank=True, max_length=1000, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_translation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrUiMenu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_path', models.CharField(blank=True, max_length=1000, null=True)),
                ('name', models.CharField(max_length=1000)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('web_icon', models.CharField(blank=True, max_length=1000, null=True)),
                ('action', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_ui_menu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrUiMenuGroupRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'ir_ui_menu_group_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrUiView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('model', models.CharField(blank=True, max_length=1000, null=True)),
                ('key', models.CharField(blank=True, max_length=1000, null=True)),
                ('priority', models.IntegerField()),
                ('type', models.CharField(blank=True, max_length=1000, null=True)),
                ('arch_db', models.TextField(blank=True, null=True)),
                ('arch_fs', models.CharField(blank=True, max_length=1000, null=True)),
                ('field_parent', models.CharField(blank=True, max_length=1000, null=True)),
                ('mode', models.CharField(max_length=1000)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_ui_view',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrUiViewCustom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arch', models.TextField()),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ir_ui_view_custom',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IrUiViewGroupRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'ir_ui_view_group_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('res_id', models.IntegerField()),
                ('res_model_0', models.CharField(blank=True, db_column='res_model', max_length=1000, null=True)),
                ('res_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('summary', models.CharField(blank=True, max_length=1000, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('feedback', models.TextField(blank=True, null=True)),
                ('date_deadline', models.DateField()),
                ('automated', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_activity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailActivityRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'mail_activity_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailActivityType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('summary', models.CharField(blank=True, max_length=1000, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('delay_count', models.IntegerField(blank=True, null=True)),
                ('delay_unit', models.CharField(max_length=1000)),
                ('delay_from', models.CharField(max_length=1000)),
                ('icon', models.CharField(blank=True, max_length=1000, null=True)),
                ('decoration_type', models.CharField(blank=True, max_length=1000, null=True)),
                ('force_next', models.BooleanField(blank=True, null=True)),
                ('category', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_activity_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailActivityTypeMailTemplateRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'mail_activity_type_mail_template_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias_name', models.CharField(blank=True, max_length=1000, null=True, unique=True)),
                ('alias_defaults', models.TextField()),
                ('alias_force_thread_id', models.IntegerField(blank=True, null=True)),
                ('alias_parent_thread_id', models.IntegerField(blank=True, null=True)),
                ('alias_contact', models.CharField(max_length=1000)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_alias',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailBlacklist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=1000, unique=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_blacklist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailChannel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('channel_type', models.CharField(blank=True, max_length=1000, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('uuid', models.CharField(blank=True, max_length=50, null=True)),
                ('email_send', models.BooleanField(blank=True, null=True)),
                ('public', models.CharField(max_length=1000)),
                ('moderation', models.BooleanField(blank=True, null=True)),
                ('moderation_notify', models.BooleanField(blank=True, null=True)),
                ('moderation_notify_msg', models.TextField(blank=True, null=True)),
                ('moderation_guidelines', models.BooleanField(blank=True, null=True)),
                ('moderation_guidelines_msg', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_channel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailChannelMailWizardInviteRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'mail_channel_mail_wizard_invite_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailChannelModeratorRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'mail_channel_moderator_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailChannelPartner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fold_state', models.CharField(blank=True, max_length=1000, null=True)),
                ('is_minimized', models.BooleanField(blank=True, null=True)),
                ('is_pinned', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_channel_partner',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailChannelResGroupsRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'mail_channel_res_groups_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailComposeMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('composition_mode', models.CharField(blank=True, max_length=1000, null=True)),
                ('use_active_domain', models.BooleanField(blank=True, null=True)),
                ('active_domain', models.TextField(blank=True, null=True)),
                ('is_log', models.BooleanField(blank=True, null=True)),
                ('subject', models.CharField(blank=True, max_length=1000, null=True)),
                ('notify', models.BooleanField(blank=True, null=True)),
                ('auto_delete', models.BooleanField(blank=True, null=True)),
                ('auto_delete_message', models.BooleanField(blank=True, null=True)),
                ('message_type', models.CharField(max_length=1000)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('body', models.TextField(blank=True, null=True)),
                ('model', models.CharField(blank=True, max_length=1000, null=True)),
                ('res_id', models.IntegerField(blank=True, null=True)),
                ('record_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('email_from', models.CharField(blank=True, max_length=1000, null=True)),
                ('no_auto_thread', models.BooleanField(blank=True, null=True)),
                ('message_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('reply_to', models.CharField(blank=True, max_length=1000, null=True)),
                ('moderation_status', models.CharField(blank=True, max_length=1000, null=True)),
                ('layout', models.CharField(blank=True, max_length=1000, null=True)),
                ('add_sign', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_compose_message',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailComposeMessageIrAttachmentsRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'mail_compose_message_ir_attachments_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailComposeMessageResPartnerRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'mail_compose_message_res_partner_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailFollowers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('res_model', models.CharField(max_length=1000)),
                ('res_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_followers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailFollowersMailMessageSubtypeRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'mail_followers_mail_message_subtype_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailMail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body_html', models.TextField(blank=True, null=True)),
                ('references', models.TextField(blank=True, null=True)),
                ('headers', models.TextField(blank=True, null=True)),
                ('notification', models.BooleanField(blank=True, null=True)),
                ('email_to', models.TextField(blank=True, null=True)),
                ('email_cc', models.CharField(blank=True, max_length=1000, null=True)),
                ('state', models.CharField(blank=True, max_length=1000, null=True)),
                ('auto_delete', models.BooleanField(blank=True, null=True)),
                ('failure_reason', models.TextField(blank=True, null=True)),
                ('scheduled_date', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_mail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailMailResPartnerRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'mail_mail_res_partner_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(blank=True, max_length=1000, null=True)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('body', models.TextField(blank=True, null=True)),
                ('model', models.CharField(blank=True, max_length=1000, null=True)),
                ('res_id', models.IntegerField(blank=True, null=True)),
                ('record_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('message_type', models.CharField(max_length=1000)),
                ('email_from', models.CharField(blank=True, max_length=1000, null=True)),
                ('no_auto_thread', models.BooleanField(blank=True, null=True)),
                ('message_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('reply_to', models.CharField(blank=True, max_length=1000, null=True)),
                ('moderation_status', models.CharField(blank=True, max_length=1000, null=True)),
                ('layout', models.CharField(blank=True, max_length=1000, null=True)),
                ('add_sign', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_message',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailMessageMailChannelRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'mail_message_mail_channel_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailMessageResPartnerNeedactionRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_read', models.BooleanField(blank=True, null=True)),
                ('is_email', models.BooleanField(blank=True, null=True)),
                ('email_status', models.CharField(blank=True, max_length=1000, null=True)),
                ('failure_type', models.CharField(blank=True, max_length=1000, null=True)),
                ('failure_reason', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_message_res_partner_needaction_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailMessageResPartnerNeedactionRelMailResendMessageRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'mail_message_res_partner_needaction_rel_mail_resend_message_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailMessageResPartnerRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'mail_message_res_partner_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailMessageResPartnerStarredRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'mail_message_res_partner_starred_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailMessageSubtype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('description', models.TextField(blank=True, null=True)),
                ('internal', models.BooleanField(blank=True, null=True)),
                ('relation_field', models.CharField(blank=True, max_length=1000, null=True)),
                ('res_model', models.CharField(blank=True, max_length=1000, null=True)),
                ('default', models.BooleanField(blank=True, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('hidden', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_message_subtype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailModeration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=1000)),
                ('status', models.CharField(max_length=1000)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_moderation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailResendCancel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_resend_cancel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailResendMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_resend_message',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailResendPartner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resend', models.BooleanField(blank=True, null=True)),
                ('message', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_resend_partner',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailShortcode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=1000)),
                ('substitution', models.TextField()),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_shortcode',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
                ('model', models.CharField(blank=True, db_column='model', max_length=1000, null=True)),
                ('lang', models.CharField(blank=True, max_length=1000, null=True)),
                ('user_signature', models.BooleanField(blank=True, null=True)),
                ('subject', models.CharField(blank=True, max_length=1000, null=True)),
                ('email_from', models.CharField(blank=True, max_length=1000, null=True)),
                ('use_default_to', models.BooleanField(blank=True, null=True)),
                ('email_to', models.CharField(blank=True, max_length=1000, null=True)),
                ('partner_to', models.CharField(blank=True, max_length=1000, null=True)),
                ('email_cc', models.CharField(blank=True, max_length=1000, null=True)),
                ('reply_to', models.CharField(blank=True, max_length=1000, null=True)),
                ('body_html', models.TextField(blank=True, null=True)),
                ('report_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('auto_delete', models.BooleanField(blank=True, null=True)),
                ('null_value', models.CharField(blank=True, max_length=1000, null=True)),
                ('copyvalue', models.CharField(blank=True, max_length=1000, null=True)),
                ('scheduled_date', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_template',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailTrackingValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field', models.CharField(max_length=1000)),
                ('field_desc', models.CharField(max_length=1000)),
                ('field_type', models.CharField(blank=True, max_length=1000, null=True)),
                ('old_value_integer', models.IntegerField(blank=True, null=True)),
                ('old_value_float', models.FloatField(blank=True, null=True)),
                ('old_value_monetary', models.FloatField(blank=True, null=True)),
                ('old_value_char', models.CharField(blank=True, max_length=1000, null=True)),
                ('old_value_text', models.TextField(blank=True, null=True)),
                ('old_value_datetime', models.DateTimeField(blank=True, null=True)),
                ('new_value_integer', models.IntegerField(blank=True, null=True)),
                ('new_value_float', models.FloatField(blank=True, null=True)),
                ('new_value_monetary', models.FloatField(blank=True, null=True)),
                ('new_value_char', models.CharField(blank=True, max_length=1000, null=True)),
                ('new_value_text', models.TextField(blank=True, null=True)),
                ('new_value_datetime', models.DateTimeField(blank=True, null=True)),
                ('track_sequence', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_tracking_value',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailWizardInvite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('res_model', models.CharField(max_length=1000)),
                ('res_id', models.IntegerField(blank=True, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('send_mail', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mail_wizard_invite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MailWizardInviteResPartnerRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'mail_wizard_invite_res_partner_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MeetingCategoryRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'meeting_category_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MergeOpportunityRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'merge_opportunity_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MessageAttachmentRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'message_attachment_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PortalShare',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('res_model', models.CharField(max_length=1000)),
                ('res_id', models.IntegerField()),
                ('note', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'portal_share',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PortalShareResPartnerRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'portal_share_res_partner_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PortalWizard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('welcome_message', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'portal_wizard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PortalWizardUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(blank=True, max_length=1000, null=True)),
                ('in_portal', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'portal_wizard_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectFavoriteUserRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'project_favorite_user_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_token', models.CharField(blank=True, max_length=1000, null=True)),
                ('name', models.CharField(max_length=1000)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('label_tasks', models.CharField(blank=True, max_length=1000, null=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('privacy_visibility', models.CharField(max_length=1000)),
                ('date_start', models.DateField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('percentage_satisfaction_task', models.IntegerField(blank=True, null=True)),
                ('percentage_satisfaction_project', models.IntegerField(blank=True, null=True)),
                ('rating_request_deadline', models.DateTimeField(blank=True, null=True)),
                ('rating_status', models.CharField(max_length=1000)),
                ('rating_status_period', models.CharField(blank=True, max_length=1000, null=True)),
                ('portal_show_rating', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'project_project',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectTags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000, unique=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'project_tags',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectTagsProjectTaskRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'project_tags_project_task_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_token', models.CharField(blank=True, max_length=1000, null=True)),
                ('rating_last_value', models.FloatField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('name', models.CharField(max_length=1000)),
                ('description', models.TextField(blank=True, null=True)),
                ('priority', models.CharField(blank=True, max_length=1000, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('kanban_state', models.CharField(max_length=1000)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('date_start', models.DateTimeField(blank=True, null=True)),
                ('date_end', models.DateTimeField(blank=True, null=True)),
                ('date_assign', models.DateTimeField(blank=True, null=True)),
                ('date_deadline', models.DateField(blank=True, null=True)),
                ('date_last_stage_update', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('planned_hours', models.FloatField(blank=True, null=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('email_from', models.CharField(blank=True, max_length=1000, null=True)),
                ('email_cc', models.CharField(blank=True, max_length=1000, null=True)),
                ('working_hours_open', models.FloatField(blank=True, null=True)),
                ('working_hours_close', models.FloatField(blank=True, null=True)),
                ('working_days_open', models.FloatField(blank=True, null=True)),
                ('working_days_close', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'project_task',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectTaskType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('description', models.TextField(blank=True, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('legend_priority', models.CharField(blank=True, max_length=1000, null=True)),
                ('legend_blocked', models.CharField(max_length=1000)),
                ('legend_done', models.CharField(max_length=1000)),
                ('legend_normal', models.CharField(max_length=1000)),
                ('fold', models.BooleanField(blank=True, null=True)),
                ('auto_validation_kanban_state', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'project_task_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectTaskTypeRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'project_task_type_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RatingRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('res_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('res_model_0', models.CharField(blank=True, db_column='res_model', max_length=1000, null=True)),
                ('res_id', models.IntegerField()),
                ('parent_res_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('parent_res_model_0', models.CharField(blank=True, db_column='parent_res_model', max_length=1000, null=True)),
                ('parent_res_id', models.IntegerField(blank=True, null=True)),
                ('rating', models.FloatField(blank=True, null=True)),
                ('rating_text', models.CharField(blank=True, max_length=1000, null=True)),
                ('feedback', models.TextField(blank=True, null=True)),
                ('access_token', models.CharField(blank=True, max_length=1000, null=True)),
                ('consumed', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rating_rating',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelModulesLangexport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'rel_modules_langexport',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelServerActions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'rel_server_actions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReportLayout',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.CharField(blank=True, max_length=1000, null=True)),
                ('pdf', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'report_layout',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReportPaperformat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('default', models.BooleanField(blank=True, null=True)),
                ('format', models.CharField(blank=True, max_length=1000, null=True)),
                ('margin_top', models.FloatField(blank=True, null=True)),
                ('margin_bottom', models.FloatField(blank=True, null=True)),
                ('margin_left', models.FloatField(blank=True, null=True)),
                ('margin_right', models.FloatField(blank=True, null=True)),
                ('page_height', models.IntegerField(blank=True, null=True)),
                ('page_width', models.IntegerField(blank=True, null=True)),
                ('orientation', models.CharField(blank=True, max_length=1000, null=True)),
                ('header_line', models.BooleanField(blank=True, null=True)),
                ('header_spacing', models.IntegerField(blank=True, null=True)),
                ('dpi', models.IntegerField()),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'report_paperformat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResBank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('street', models.CharField(blank=True, max_length=1000, null=True)),
                ('street2', models.CharField(blank=True, max_length=1000, null=True)),
                ('zip', models.CharField(blank=True, max_length=1000, null=True)),
                ('city', models.CharField(blank=True, max_length=1000, null=True)),
                ('email', models.CharField(blank=True, max_length=1000, null=True)),
                ('phone', models.CharField(blank=True, max_length=1000, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('bic', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_bank',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResCompany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000, unique=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('report_header', models.TextField(blank=True, null=True)),
                ('report_footer', models.TextField(blank=True, null=True)),
                ('logo_web', models.BinaryField(blank=True, null=True)),
                ('account_no', models.CharField(blank=True, max_length=1000, null=True)),
                ('email', models.CharField(blank=True, max_length=1000, null=True)),
                ('phone', models.CharField(blank=True, max_length=1000, null=True)),
                ('company_registry', models.CharField(blank=True, max_length=1000, null=True)),
                ('base_onboarding_company_state', models.CharField(blank=True, max_length=1000, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('partner_gid', models.IntegerField(blank=True, null=True)),
                ('snailmail_color', models.BooleanField(blank=True, null=True)),
                ('snailmail_duplex', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_company',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResCompanyUsersRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'res_company_users_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_config',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResConfigInstaller',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_config_installer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResConfigSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('group_multi_company', models.BooleanField(blank=True, null=True)),
                ('user_default_rights', models.BooleanField(blank=True, null=True)),
                ('external_email_server_default', models.BooleanField(blank=True, null=True)),
                ('module_base_import', models.BooleanField(blank=True, null=True)),
                ('module_google_calendar', models.BooleanField(blank=True, null=True)),
                ('module_google_drive', models.BooleanField(blank=True, null=True)),
                ('module_google_spreadsheet', models.BooleanField(blank=True, null=True)),
                ('module_auth_oauth', models.BooleanField(blank=True, null=True)),
                ('module_auth_ldap', models.BooleanField(blank=True, null=True)),
                ('module_base_gengo', models.BooleanField(blank=True, null=True)),
                ('module_inter_company_rules', models.BooleanField(blank=True, null=True)),
                ('module_pad', models.BooleanField(blank=True, null=True)),
                ('module_voip', models.BooleanField(blank=True, null=True)),
                ('module_web_unsplash', models.BooleanField(blank=True, null=True)),
                ('module_partner_autocomplete', models.BooleanField(blank=True, null=True)),
                ('company_share_partner', models.BooleanField(blank=True, null=True)),
                ('group_multi_currency', models.BooleanField(blank=True, null=True)),
                ('show_effect', models.BooleanField(blank=True, null=True)),
                ('fail_counter', models.IntegerField(blank=True, null=True)),
                ('alias_domain', models.CharField(blank=True, max_length=1000, null=True)),
                ('unsplash_access_key', models.CharField(blank=True, max_length=1000, null=True)),
                ('auth_signup_reset_password', models.BooleanField(blank=True, null=True)),
                ('auth_signup_uninvited', models.CharField(blank=True, max_length=1000, null=True)),
                ('digest_emails', models.BooleanField(blank=True, null=True)),
                ('module_project_forecast', models.BooleanField(blank=True, null=True)),
                ('module_hr_timesheet', models.BooleanField(blank=True, null=True)),
                ('group_subtask_project', models.BooleanField(blank=True, null=True)),
                ('group_project_rating', models.BooleanField(blank=True, null=True)),
                ('crm_alias_prefix', models.CharField(blank=True, max_length=1000, null=True)),
                ('generate_lead_from_alias', models.BooleanField(blank=True, null=True)),
                ('group_use_lead', models.BooleanField(blank=True, null=True)),
                ('module_crm_phone_validation', models.BooleanField(blank=True, null=True)),
                ('module_crm_reveal', models.BooleanField(blank=True, null=True)),
                ('module_hr_org_chart', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_config_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResCountry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000, unique=True)),
                ('code', models.CharField(blank=True, max_length=2, null=True, unique=True)),
                ('address_format', models.TextField(blank=True, null=True)),
                ('phone_code', models.IntegerField(blank=True, null=True)),
                ('name_position', models.CharField(blank=True, max_length=1000, null=True)),
                ('vat_label', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_country',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResCountryGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_country_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResCountryResCountryGroupRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'res_country_res_country_group_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResCountryState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('code', models.CharField(max_length=1000)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_country_state',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResCurrency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000, unique=True)),
                ('symbol', models.CharField(max_length=1000)),
                ('rounding', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('decimal_places', models.IntegerField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('position', models.CharField(blank=True, max_length=1000, null=True)),
                ('currency_unit_label', models.CharField(blank=True, max_length=1000, null=True)),
                ('currency_subunit_label', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_currency',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResCurrencyRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.DateField()),
                ('rate', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_currency_rate',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('comment', models.TextField(blank=True, null=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('share', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResGroupsImpliedRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'res_groups_implied_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResGroupsReportRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'res_groups_report_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResGroupsUsersRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'res_groups_users_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResLang',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000, unique=True)),
                ('code', models.CharField(max_length=1000, unique=True)),
                ('iso_code', models.CharField(blank=True, max_length=1000, null=True)),
                ('translatable', models.BooleanField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('direction', models.CharField(max_length=1000)),
                ('date_format', models.CharField(max_length=1000)),
                ('time_format', models.CharField(max_length=1000)),
                ('week_start', models.IntegerField()),
                ('grouping', models.CharField(max_length=1000)),
                ('decimal_point', models.CharField(max_length=1000)),
                ('thousands_sep', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_lang',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResourceCalendar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('hours_per_day', models.FloatField(blank=True, null=True)),
                ('tz', models.CharField(max_length=1000)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'resource_calendar',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResourceCalendarAttendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('dayofweek', models.CharField(max_length=1000)),
                ('date_from', models.DateField(blank=True, null=True)),
                ('date_to', models.DateField(blank=True, null=True)),
                ('hour_from', models.FloatField()),
                ('hour_to', models.FloatField()),
                ('day_period', models.CharField(max_length=1000)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'resource_calendar_attendance',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResourceCalendarLeaves',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
                ('date_from', models.DateTimeField()),
                ('date_to', models.DateTimeField()),
                ('time_type', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'resource_calendar_leaves',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResourceResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('resource_type', models.CharField(max_length=1000)),
                ('time_efficiency', models.FloatField()),
                ('tz', models.CharField(max_length=1000)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'resource_resource',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResourceTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'resource_test',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResPartner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('display_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('ref', models.CharField(blank=True, max_length=1000, null=True)),
                ('lang', models.CharField(blank=True, max_length=1000, null=True)),
                ('tz', models.CharField(blank=True, max_length=1000, null=True)),
                ('vat', models.CharField(blank=True, max_length=1000, null=True)),
                ('website', models.CharField(blank=True, max_length=1000, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('credit_limit', models.FloatField(blank=True, null=True)),
                ('barcode', models.CharField(blank=True, max_length=1000, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('customer', models.BooleanField(blank=True, null=True)),
                ('supplier', models.BooleanField(blank=True, null=True)),
                ('employee', models.BooleanField(blank=True, null=True)),
                ('function', models.CharField(blank=True, max_length=1000, null=True)),
                ('type', models.CharField(blank=True, max_length=1000, null=True)),
                ('street', models.CharField(blank=True, max_length=1000, null=True)),
                ('street2', models.CharField(blank=True, max_length=1000, null=True)),
                ('zip', models.CharField(blank=True, max_length=1000, null=True)),
                ('city', models.CharField(blank=True, max_length=1000, null=True)),
                ('email', models.CharField(blank=True, max_length=1000, null=True)),
                ('phone', models.CharField(blank=True, max_length=1000, null=True)),
                ('mobile', models.CharField(blank=True, max_length=1000, null=True)),
                ('is_company', models.BooleanField(blank=True, null=True)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('partner_share', models.BooleanField(blank=True, null=True)),
                ('commercial_company_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('company_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('message_bounce', models.IntegerField(blank=True, null=True)),
                ('signup_token', models.CharField(blank=True, max_length=1000, null=True)),
                ('signup_type', models.CharField(blank=True, max_length=1000, null=True)),
                ('signup_expiration', models.DateTimeField(blank=True, null=True)),
                ('partner_gid', models.IntegerField(blank=True, null=True)),
                ('additional_info', models.CharField(blank=True, max_length=1000, null=True)),
                ('calendar_last_notif_ack', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_partner',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResPartnerAutocompleteSync',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('synched', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_partner_autocomplete_sync',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResPartnerBank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acc_number', models.CharField(max_length=1000)),
                ('sanitized_acc_number', models.CharField(blank=True, max_length=1000, null=True)),
                ('acc_holder_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('sequence', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_partner_bank',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResPartnerCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_path', models.CharField(blank=True, max_length=1000, null=True)),
                ('name', models.CharField(max_length=1000)),
                ('color', models.IntegerField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_partner_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResPartnerIndustry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
                ('full_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_partner_industry',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResPartnerResPartnerCategoryRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'res_partner_res_partner_category_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResPartnerTitle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('shortcut', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_partner_title',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResUsers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(blank=True, null=True)),
                ('login', models.CharField(max_length=1000, unique=True)),
                ('password', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('signature', models.TextField(blank=True, null=True)),
                ('action_id', models.IntegerField(blank=True, null=True)),
                ('share', models.BooleanField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
                ('notification_type', models.CharField(max_length=1000)),
                ('odoobot_state', models.CharField(max_length=1000)),
                ('target_sales_won', models.IntegerField(blank=True, null=True)),
                ('target_sales_done', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResUsersLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'res_users_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RuleGroupRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'rule_group_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SmsSendSms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipients', models.CharField(max_length=1000)),
                ('message', models.TextField()),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sms_send_sms',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SnailmailLetter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=1000)),
                ('res_id', models.IntegerField()),
                ('color', models.BooleanField(blank=True, null=True)),
                ('duplex', models.BooleanField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=1000, null=True)),
                ('info_msg', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'snailmail_letter',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TeamFavoriteUserRel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'team_favorite_user_rel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UtmCampaign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'utm_campaign',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UtmMedium',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'utm_medium',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UtmSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'utm_source',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WebEditorConverterTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('char', models.CharField(blank=True, max_length=1000, null=True)),
                ('integer', models.IntegerField(blank=True, null=True)),
                ('float', models.FloatField(blank=True, null=True)),
                ('numeric', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('binary', models.BinaryField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('datetime', models.DateTimeField(blank=True, null=True)),
                ('selection', models.IntegerField(blank=True, null=True)),
                ('selection_str', models.CharField(blank=True, max_length=1000, null=True)),
                ('html', models.TextField(blank=True, null=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'web_editor_converter_test',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WebEditorConverterTestSub',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=1000, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'web_editor_converter_test_sub',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WebTourTour',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
            ],
            options={
                'db_table': 'web_tour_tour',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WizardIrModelMenuCreate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
                ('write_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'wizard_ir_model_menu_create',
                'managed': False,
            },
        ),
    ]
